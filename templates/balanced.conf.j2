from balanced_service.settings import HEALTH_CHECK, AMQP, ES, DS, REDIS, FEATURES

HEALTH_CHECK.update({
    'file_path': '{{ balanced_health_file }}',
    'allowed_cidrs': [
        '127.0.0.1',
        '10.0.0.0/8',
        '173.164.253.217',
        '108.68.104.233',
    ],
    'check_connectivity': True
})

APP_ENVIRONMENT = '{{ balanced_app_environment }}'

PROXIED = {% 'True' if balanced_proxied else 'False' %}

{% if balanced_precog_url %}
PRECOG = {
    'root_url': '{{  balanced_precog_url  }}',
    'auth': ('{{  balanced_precog_username  }}', '{{  balanced_precog_password  }}'),
}
{%- endif %}

{% if balanced_postgres %}
DATABASES = {
  {% for type, uris in balanced_postgres.iteritems() -%}
    '{{  type  }}': [
      {% for uri in -%}
        '{{  uri  }}',
      {%- endfor %}
    ],
  {%- endfor %}
}
{%- endif %}

{% if balanced_amqp %}
AMQP.update({
  {% for key, value in balanced_amqp.iteritems() %}
    {% if isinstance(value, basestring) %}
    '{{ key }}': '{{ value }}',
    {% endif %}
  {% endfor %}
})
{%- endif %}

{% if balanced_es %}
ES.update({
  {% for name, cluster in balanced_es['clusters'].iteritems() -%}
      '{{  name  }}': {
          'hosts': [
    {% for host in cluster['hosts'] -%}
              '{{  host  }}',
    {%- endfor %}
          ],
    {% if cluster['username'] and cluster['password'] -%}
          'basic_auth': {
              'username': '{{  cluster['username']  }}',
              'password': '{{  cluster['password']  }}'
          },
    {%- endif %}
      },
  {%- endfor %}
})
ES['pool'].update({
    'maxsize': {{  balanced_es['pool']['max_size']  }},
    'timeout': {{  balanced_es['pool']['timeout']  }},
})
{%- endif %}

{% if balanced_redis %}
REDIS.update({
    'host': '{{  balanced_redis['host']  }}',
    'db': '{{  balanced_redis['db']  }}',
})
{%- endif %}

{% if balanced_sentry %}
SENTRY_URL = '{{  balanced_sentry['url']  }}'
SENTRY_DSN = '{{  balanced_sentry['dsn']  }}'
{%- endif %}

{% if balanced_features %}
FEATURES.update({
  {% for name, enable in balanced_features.iteritems() %}
      '{{  name  }}': {{ 'True' if enable else 'False' }},
  {%- endfor %}
})
{%- endif %}

{% if balanced_statsd %}
STATSD = {
    'host': '{{  balanced_statsd['host']  }}',
    'port': '{{  balanced_statsd['port']  }}',
}
{%- endif %}

{% if balanced_ignoreable_callback_domains %}
IGNOREABLE_CALLBACK_DOMAINS = (
    {% for icd in balanced_ignoreable_callback_domains -%}
        '{{  icd  }}',
    {%- endfor %}
)
{% endif %}


CAN_SERVE_PRODUCTION_MARKETPLACES = {{ 'True' if balanced_serves_live else 'False' }}
CAN_SERVE_TEST_MARKETPLACES = {{ 'True' if balanced_serves_integration else 'False' }}


{% if balanced_newrelic_file -%}
NEWRELIC_FILE = '{{  balanced_newrelic_file  }}'
  {% if balanced_newrelic_env -%}
NEWRELIC_ENV = '{{  balanced_newrelic_env  }}'
  {%- endif %}
{%- endif %}
